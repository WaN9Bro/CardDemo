
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Luban;
using Newtonsoft.Json.Linq;



namespace MyGame
{

public partial struct AddBuffWarp
{
    public AddBuffWarp(JToken _buf) 
    {
        JObject _obj = _buf as JObject;
        Probability = (float)_obj.GetValue("Probability");
        BuffKey = (string)_obj.GetValue("BuffKey");
        AddStack = (int)_obj.GetValue("AddStack");
        TimeChange = (bool)_obj.GetValue("TimeChange");
        Permanent = (bool)_obj.GetValue("Permanent");
        Duration = (float)_obj.GetValue("Duration");
        { var __json0 = _obj.GetValue("Params"); Params = new System.Collections.Generic.Dictionary<string, mObject[]>((__json0 as JArray).Count); foreach(JToken __e0 in __json0) { string _k0;  _k0 = (string)__e0[0]; mObject[] _v0;  { var __json1 = __e0[1]; int _n1 = (__json1 as JArray).Count; _v0 = new mObject[_n1]; int __index1=0; foreach(JToken __e1 in __json1) { mObject __v1;  __v1 = mObject.DeserializemObject(__e1);  _v0[__index1++] = __v1; }   }  Params.Add(_k0, _v0); }   }
    }

    public static AddBuffWarp DeserializeAddBuffWarp(JToken _buf)
    {
        return new AddBuffWarp(_buf);
    }

    /// <summary>
    /// 概率
    /// </summary>
    public readonly float Probability;
    /// <summary>
    /// Buff表的Key
    /// </summary>
    public readonly string BuffKey;
    /// <summary>
    /// 添加的Buff层数
    /// </summary>
    public readonly int AddStack;
    /// <summary>
    /// Buff的持续时间修改，true是直接设置，flase是改变
    /// </summary>
    public readonly bool TimeChange;
    /// <summary>
    /// 是否永久Buff
    /// </summary>
    public readonly bool Permanent;
    /// <summary>
    /// 持续时间
    /// </summary>
    public readonly float Duration;
    /// <summary>
    /// 参数
    /// </summary>
    public readonly System.Collections.Generic.Dictionary<string, mObject[]> Params;



    public  void ResolveRef(Tables tables)
    {
    }

    public override string ToString()
    {
        return "{ "
        + "Probability:" + Probability + ","
        + "BuffKey:" + BuffKey + ","
        + "AddStack:" + AddStack + ","
        + "TimeChange:" + TimeChange + ","
        + "Permanent:" + Permanent + ","
        + "Duration:" + Duration + ","
        + "Params:" + Luban.StringUtil.CollectionToString(Params) + ","
        + "}";
    }
}
}

