
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Luban;
using Newtonsoft.Json.Linq;



namespace MyGame
{

public sealed partial class BuffEventValueWarp : Luban.BeanBase
{
    public BuffEventValueWarp(JToken _buf) 
    {
        JObject _obj = _buf as JObject;
        BuffEventType = (EBuffEventType)(int)_obj.GetValue("BuffEventType");
        Event = (string)_obj.GetValue("Event");
        { var __json0 = _obj.GetValue("Params"); int _n0 = (__json0 as JArray).Count; Params = new mObject[_n0]; int __index0=0; foreach(JToken __e0 in __json0) { mObject __v0;  __v0 = mObject.DeserializemObject(__e0);  Params[__index0++] = __v0; }   }
    }

    public static BuffEventValueWarp DeserializeBuffEventValueWarp(JToken _buf)
    {
        return new BuffEventValueWarp(_buf);
    }

    /// <summary>
    /// 方法时机
    /// </summary>
    public readonly EBuffEventType BuffEventType;
    /// <summary>
    /// 方法名
    /// </summary>
    public readonly string Event;
    /// <summary>
    /// 参数
    /// </summary>
    public readonly mObject[] Params;


    public const int __ID__ = 141016434;
    public override int GetTypeId() => __ID__;

    public  void ResolveRef(Tables tables)
    {
        foreach (var _e in Params) { _e?.ResolveRef(tables); }
    }

    public override string ToString()
    {
        return "{ "
        + "BuffEventType:" + BuffEventType + ","
        + "Event:" + Event + ","
        + "Params:" + Luban.StringUtil.CollectionToString(Params) + ","
        + "}";
    }
}
}

