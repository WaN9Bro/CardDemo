
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Luban;
using Newtonsoft.Json.Linq;



namespace MyGame
{

public partial struct CreateDamageWarp
{
    public CreateDamageWarp(JToken _buf) 
    {
        JObject _obj = _buf as JObject;
        DamageType = (EDamageType)(int)_obj.GetValue("DamageType");
        DamageAttr = (EDamageAttr)(int)_obj.GetValue("DamageAttr");
        TargetFliter = (ETargetFliter)(int)_obj.GetValue("TargetFliter");
        Count = (int)_obj.GetValue("Count");
        Ratio = (float)_obj.GetValue("Ratio");
        FixedValue = (int)_obj.GetValue("FixedValue");
    }

    public static CreateDamageWarp DeserializeCreateDamageWarp(JToken _buf)
    {
        return new CreateDamageWarp(_buf);
    }

    /// <summary>
    /// 伤害类型
    /// </summary>
    public readonly EDamageType DamageType;
    /// <summary>
    /// 伤害属性
    /// </summary>
    public readonly EDamageAttr DamageAttr;
    /// <summary>
    /// 目标过滤类型
    /// </summary>
    public readonly ETargetFliter TargetFliter;
    /// <summary>
    /// 目标数量
    /// </summary>
    public readonly int Count;
    /// <summary>
    /// 伤害比例
    /// </summary>
    public readonly float Ratio;
    /// <summary>
    /// 伤害固定值
    /// </summary>
    public readonly int FixedValue;



    public  void ResolveRef(Tables tables)
    {
    }

    public override string ToString()
    {
        return "{ "
        + "DamageType:" + DamageType + ","
        + "DamageAttr:" + DamageAttr + ","
        + "TargetFliter:" + TargetFliter + ","
        + "Count:" + Count + ","
        + "Ratio:" + Ratio + ","
        + "FixedValue:" + FixedValue + ","
        + "}";
    }
}
}

