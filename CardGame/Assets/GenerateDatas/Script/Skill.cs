
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Luban;
using Newtonsoft.Json.Linq;



namespace MyGame
{

public sealed partial class Skill : Luban.BeanBase
{
    public Skill(JToken _buf) 
    {
        JObject _obj = _buf as JObject;
        Id = (int)_obj.GetValue("Id");
        Group = (int)_obj.GetValue("Group");
        Rule = CastRule.DeserializeCastRule(_obj.GetValue("Rule"));
        Condition = CastCondition.DeserializeCastCondition(_obj.GetValue("Condition"));
        Cost = CastResource.DeserializeCastResource(_obj.GetValue("Cost"));
        EffectTimeKey = (string)_obj.GetValue("EffectTimeKey");
        { var __json0 = _obj.GetValue("EffectTimeParams"); EffectTimeParams = new System.Collections.Generic.List<System.Object>((__json0 as JArray).Count); foreach(JToken __e0 in __json0) { System.Object __v0;  __v0 = ExternalTypeUtil.NewObject(MObject.DeserializeMObject(__e0));  EffectTimeParams.Add(__v0); }   }
    }

    public static Skill DeserializeSkill(JToken _buf)
    {
        return new Skill(_buf);
    }

    /// <summary>
    /// id
    /// </summary>
    public readonly int Id;
    /// <summary>
    /// 技能组
    /// </summary>
    public readonly int Group;
    /// <summary>
    /// 技能释放规则
    /// </summary>
    public readonly CastRule Rule;
    /// <summary>
    /// 技能释放条件
    /// </summary>
    public readonly CastCondition Condition;
    /// <summary>
    /// 技能消耗
    /// </summary>
    public readonly CastResource Cost;
    /// <summary>
    /// 表现Key
    /// </summary>
    public readonly string EffectTimeKey;
    /// <summary>
    /// 参数
    /// </summary>
    public readonly System.Collections.Generic.List<System.Object> EffectTimeParams;


    public const int __ID__ = 79944241;
    public override int GetTypeId() => __ID__;

    public  void ResolveRef(Tables tables)
    {
    }

    public override string ToString()
    {
        return "{ "
        + "Id:" + Id + ","
        + "Group:" + Group + ","
        + "Rule:" + Rule + ","
        + "Condition:" + Condition + ","
        + "Cost:" + Cost + ","
        + "EffectTimeKey:" + EffectTimeKey + ","
        + "EffectTimeParams:" + Luban.StringUtil.CollectionToString(EffectTimeParams) + ","
        + "}";
    }
}
}

